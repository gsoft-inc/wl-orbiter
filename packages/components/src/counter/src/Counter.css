.o-ui-counter {
    color: var(--o-ui-text-alias-primary);
}

/* HIGHLIGHT */
.o-ui-counter-highlight {
    font-weight: 500;
}

/* PUSHED */
.o-ui-counter-pushed {
    margin-left: var(--o-ui-sp-2);
}

/* PUSHED | REVERSE */
.o-ui-counter-pushed.o-ui-counter-reverse {
    margin-left: 0;
    margin-right: var(--o-ui-sp-2);
}

/* DISABLED */
.o-ui-counter[disabled] {
    opacity: var(--o-ui-disabled-opacity);
}

/* BASIC */
.o-ui-counter-basic {
    display: inline-block;
}

/* DIVIDER */
.o-ui-counter-divider {
    display: inline-block;
    position: relative;
    padding-left: var(--o-ui-sp-2);
}

/* Using a before element for the border to add an opacity to the border color when it's inherited. */
.o-ui-counter-divider::before {
    content: "";
    position: absolute;
    top: 10%;
    right: 0;
    left: 0;
    bottom: 0;
    height: 80%;
    border-left: 1px solid currentColor;
    opacity: 0.4;
}

/* DIVIDER | REVERSE */
.o-ui-counter-divider.o-ui-counter-reverse {
    padding-left: 0;
    padding-right: var(--o-ui-sp-2);
}

.o-ui-counter-divider.o-ui-counter-reverse::before {
    border-left: 0;
    border-right: 1px solid currentColor;
}

/* DIVIDER | COLOR | INHERIT */
.o-ui-counter-divider.o-ui-counter-inherit-color::before {
    border-color: inherit;
    opacity: 0.3;
}
